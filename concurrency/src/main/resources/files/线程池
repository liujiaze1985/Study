现在没必要手动写线程池，可以使用concurrent 包中的线程池，或第三方库中的线程池

使用线程池的意义：
    创建销毁，垃圾回收非常消耗资源

几个重要概念：
	任务队列 	： 提交任务放入该队列，等待执行
	拒绝策略 	： 超出该服务处理能力时，可以使用的策略有（抛出异常，直接丢弃，阻塞，放入临时队列）
	初始化线程数 	： init(min)
	活动线程数 	： active
	最大线程数	： max

	批处理
	异步调用

init <= active <= max

定时器 Quartz / Control-M : Quartz中的线程池写的不错


init 时可以创建 min 个线程， 当线程不够时 可以扩充到active ，此时还不够用 可以扩充到max，